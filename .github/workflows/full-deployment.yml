name: Full ML Pipeline Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production
      setup_infrastructure:
        description: 'Setup infrastructure (database, warehouse, etc.)'
        required: false
        default: true
        type: boolean
      deploy_notebooks:
        description: 'Deploy notebooks from sf_nbs/ directory'
        required: false
        default: true
        type: boolean
      force_recreate:
        description: 'Force recreate infrastructure (destructive)'
        required: false
        default: false
        type: boolean

env:
  SNOWFLAKE_ACCOUNT: ${{ vars.SNOWFLAKE_ACCOUNT }}
  SNOWFLAKE_USER: ${{ vars.SNOWFLAKE_USER }}
  SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  SNOWFLAKE_ROLE: ${{ vars.SNOWFLAKE_ROLE }}
  SNOWFLAKE_WAREHOUSE: ${{ vars.SNOWFLAKE_WAREHOUSE }}
  SNOWFLAKE_DATABASE: ${{ vars.SNOWFLAKE_DATABASE }}
  SNOWFLAKE_SCHEMA: ${{ vars.SNOWFLAKE_SCHEMA }}

jobs:
  infrastructure:
    name: Setup Infrastructure
    if: ${{ inputs.setup_infrastructure == true }}
    uses: ./.github/workflows/setup-infrastructure.yml
    with:
      environment: ${{ inputs.environment }}
      force_recreate: ${{ inputs.force_recreate }}
    secrets: inherit

  notebooks:
    name: Deploy Notebooks
    if: ${{ inputs.deploy_notebooks == true && (always() && (needs.infrastructure.result == 'success' || needs.infrastructure.result == 'skipped' || inputs.setup_infrastructure == false)) }}
    needs: [infrastructure]
    uses: ./.github/workflows/deploy-notebooks.yml
    with:
      environment: ${{ inputs.environment }}
      setup_infrastructure: false  # Infrastructure already handled above
    secrets: inherit

  summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [infrastructure, notebooks]
    if: always()
    steps:
      - name: Generate Summary
        run: |
          echo "üöÄ ML Pipeline Deployment Summary"
          echo "================================="
          echo ""
          echo "**Environment:** ${{ inputs.environment }}"
          echo "**Timestamp:** $(date -u)"
          echo ""
          
          # Infrastructure status
          if [ "${{ inputs.setup_infrastructure }}" == "true" ]; then
            if [ "${{ needs.infrastructure.result }}" == "success" ]; then
              echo "‚úÖ **Infrastructure Setup:** Completed successfully"
            elif [ "${{ needs.infrastructure.result }}" == "skipped" ]; then
              echo "‚è≠Ô∏è  **Infrastructure Setup:** Skipped (already exists)"
            else
              echo "‚ùå **Infrastructure Setup:** Failed"
            fi
          else
            echo "‚è≠Ô∏è  **Infrastructure Setup:** Skipped by user choice"
          fi
          
          # Notebooks status
          if [ "${{ inputs.deploy_notebooks }}" == "true" ]; then
            if [ "${{ needs.notebooks.result }}" == "success" ]; then
              echo "‚úÖ **Notebook Deployment:** Completed successfully"
            else
              echo "‚ùå **Notebook Deployment:** Failed"
            fi
          else
            echo "‚è≠Ô∏è  **Notebook Deployment:** Skipped by user choice"
          fi
          
          echo ""
          echo "üéØ **Next Steps:**"
          if [ "${{ needs.infrastructure.result }}" == "success" ] && [ "${{ needs.notebooks.result }}" == "success" ]; then
            echo "1. Access Snowflake and navigate to your notebooks"
            echo "2. Test notebook execution manually"
            echo "3. Monitor scheduled tasks (if configured)"
            echo "4. Add more notebooks to sf_nbs/ directory as needed"
          elif [ "${{ needs.infrastructure.result }}" == "failure" ]; then
            echo "1. Review infrastructure setup logs"
            echo "2. Check Snowflake permissions and resources"
            echo "3. Re-run deployment after fixing issues"
          elif [ "${{ needs.notebooks.result }}" == "failure" ]; then
            echo "1. Review notebook deployment logs"
            echo "2. Check sf_nbs/ directory has valid .ipynb files"
            echo "3. Verify infrastructure is properly set up"
          fi
          
          echo ""
          echo "üìã **Resources:**"
          echo "- Database: ${{ env.SNOWFLAKE_DATABASE }}"
          echo "- Schema: ${{ env.SNOWFLAKE_SCHEMA }}"
          echo "- Warehouse: ${{ env.SNOWFLAKE_WAREHOUSE }}"
          echo "- Git Repository: ML_PIPELINE_REPO"
          echo "- Notebooks Directory: sf_nbs/" 